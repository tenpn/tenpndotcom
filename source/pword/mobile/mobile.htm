<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
	<head>
		<title>
			Password Generator
		</title>

<meta name="viewport" content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" />
<meta name="apple-mobile-web-app-capable" content="yes" />

<style type="text/css" media="screen">@import "./iui/iui.css";</style>


<!-- <script type="application/x-javascript" src="./iui/iui.js"></script> -->

		<script language="JavaScript"> 

		
			/*
			 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
			 * in FIPS PUB 180-1
			 * Version 2.1 Copyright Paul Johnston 2000 - 2002.
			 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
			 * Distributed under the BSD License
			 * See http://pajhome.org.uk/crypt/md5 for details.
			 */

			var b64pad  = "";
			var chrsz   = 8;

			function makePword(master, site) { return b64_sha1(master+':'+ site).substr(0,8) + '1a'; }
			
			function b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length * chrsz));}

			function core_sha1(x, len)
			{
			  x[len >> 5] |= 0x80 << (24 - len % 32);
			  x[((len + 64 >> 9) << 4) + 15] = len;

			  var w = Array(80);
			  var a =  1732584193;
			  var b = -271733879;
			  var c = -1732584194;
			  var d =  271733878;
			  var e = -1009589776;

			  for(var i = 0; i < x.length; i += 16)
			  {
			    var olda = a;
			    var oldb = b;
			    var oldc = c;
			    var oldd = d;
			    var olde = e;

			    for(var j = 0; j < 80; j++)
			    {
			      if(j < 16) w[j] = x[i + j];
			      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);
			      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)), 
			                       safe_add(safe_add(e, w[j]), sha1_kt(j)));
			      e = d;
			      d = c;
			      c = rol(b, 30);
			      b = a;
			      a = t;
			    }

			    a = safe_add(a, olda);
			    b = safe_add(b, oldb);
			    c = safe_add(c, oldc);
			    d = safe_add(d, oldd);
			    e = safe_add(e, olde);
			  }
			  return Array(a, b, c, d, e);

			}

			function sha1_ft(t, b, c, d)
			{
			  if(t < 20) return (b & c) | ((~b) & d);
			  if(t < 40) return b ^ c ^ d;
			  if(t < 60) return (b & c) | (b & d) | (c & d);
			  return b ^ c ^ d;
			}

			function sha1_kt(t)
			{
			  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
			         (t < 60) ? -1894007588 : -899497514;
			}  

			function safe_add(x, y)
			{
			  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
			  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
			  return (msw << 16) | (lsw & 0xFFFF);
			}

			function rol(num, cnt)
			{
			  return (num << cnt) | (num >>> (32 - cnt));
			}

			function str2binb(str)
			{
			  var bin = Array();
			  var mask = (1 << chrsz) - 1;
			  for(var i = 0; i < str.length * chrsz; i += chrsz)
			    bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);
			  return bin;
			}

			function binb2b64(binarray)
			{
			  var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
			  var str = "";
			  for(var i = 0; i < binarray.length * 4; i += 3)
			  {
			    var triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16)
			                | (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 )
			                |  ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);
			    for(var j = 0; j < 4; j++)
			    {
			      if(i * 8 + j * 6 > binarray.length * 32) str += b64pad;
			      else str += tab.charAt((triplet >> 6*(3-j)) & 0x3F);
			    }
			  }
			  return str;
			}		

		</script>
	</head>
	<body>

    <div class="toolbar">
        <h1 id="pageTitle">Generator</h1>
        <a class="button" href="http://www.angel.net/~nic/passwd.sha1.1a.html">Help</a>

    </div>

		<form class="panel" selected="true" name="f" method="POST" 
			onSubmit="google.value = makePword(master.value, 'google'); password.value = makePword(master.value, site.value); document.f.password.focus(); document.f.password.select(); return false;"> 

        <h2>Input</h2>

        <fieldset>

<div class="row">
<label>Master</label>
<input name="master" autocapitalize="off"/>
</div>
<script language="JavaScript">document.f.master.focus()</script>

            <div class="row">
<label>Site name</label>
<input name="site" autocapitalize="off"/>
</div>

        </fieldset>


<input type="submit" value="Generate">
<br><br>
<h2>Output</h2>

        <fieldset>


<div class="row">
<label>Google</label>
<input name="google" />
</div>
<div class="row">
<label>Generated</label>
<input name="password" />
</div>
</fieldset>
</form>
  
 



	</body>
</html>
